# GdnRegistrar

type Event_GdnRegistrarApproval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Event_GdnRegistrarApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Event_GdnRegistrarNftAction @entity(immutable: true) {
  id: Bytes!
  labelAction: Int! # uint8
  label: String! # string
  to: Bytes! # address
  expiry: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Event_GdnRegistrarOwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Event_GdnRegistrarTransfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

# GdnRegistrationService
type Event_GdnRegistrationServiceLabelAction @entity(immutable: true) {
  id: Bytes!
  label: String! # string
  userAddress: Bytes! # address
  expiry: BigInt! # uint256
  action: String! # string
  timestamp: BigInt! # uint256
  orderId: String! # string
  amountPaid: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Event_GdnRegistrationServiceOwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Event_GdnRegistrationServiceWithdrawn @entity(immutable: true) {
  id: Bytes!
  beneficiary: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

# GdnPaymentReceiver
type Event_GdnPaymentReceiverOwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Event_GdnPaymentReceiverPaymentReceived @entity(immutable: true) {
  id: Bytes!
  payer: Bytes! # address
  amount: BigInt! # uint256
  orderId: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Event_GdnPaymentReceiverWithdrawn @entity(immutable: true) {
  id: Bytes!
  beneficiary: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Payment @entity {
  id: Bytes!
}

type LabelNft @entity {
  id: Bytes!
  tokenId: BigInt!
  label: String!
  expiry: BigInt!
  owner: Bytes!
  mintedBlockNumber: BigInt!
  mintedTimestamp: BigInt!
  lastUpdatedBlockNumber: BigInt!
  lastUpdatedTimestamp: BigInt!
  previousOwners: [LabelNftOwnerHistoryEntry!] @derivedFrom(field: "labelNft")
}

type LabelNftOwnerHistoryEntry @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  blockNumber: BigInt!
  timestamp: BigInt!
  labelNft: LabelNft!
}

type Label @entity {
  id: Bytes! # Bytes.fromUTF8(label)
  label: String!
  expiry: BigInt!
  owner: Bytes!
  lastUpdatedTimestamp: BigInt!
  lastUpdatedBlockNumber: BigInt!
  createdTimestamp: BigInt!
  createdBlockNumber: BigInt!
  previousOwners: [LabelOwnerHistoryEntry!] @derivedFrom(field: "label")
  renewals: [LabelRenewal!] @derivedFrom(field: "label")
}

type LabelOwnerHistoryEntry @entity(immutable: true) {
  id: Bytes!
  owner: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  label: Label!
}

type LabelRenewal @entity(immutable: true) {
  id: Bytes!
  expiry: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  label: Label!
}